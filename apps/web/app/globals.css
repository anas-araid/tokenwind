@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;

    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;

    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;

    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;

    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;

    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 10% 3.9%;

    --radius: 0.5rem;

    --foreground-rgb: 0, 0, 0;
    --background-start-rgb: 214, 219, 220;
    --background-end-rgb: 255, 255, 255;
  }

  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;

    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;

    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;

    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;

    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;

    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;

    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

html {
  background-color: black;
  height: 100%;
}

body {
  color: rgb(var(--foreground-rgb));
  --background: linear-gradient(to right, transparent, rgb(var(--background-end-rgb))) rgb(var(--background-start-rgb));
  background-color: #161616;
  /*--tw-bg-opacity: 1;
  background-color: rgb(24 24 27 / var(--tw-bg-opacity));*/
  height: 100%;
}

[data-overlay-container='true'] {
  height: 100%;
  width: 100%;
}

::selection {
  background: white;
  color: #000;
  -webkit-text-fill-color: #000;
}

/* .mask {
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: add, add;
  mask-composite: xor;
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

.asdf {
  position: absolute;
  left: 50%;
  top: 50%;
  width: 100%;
  opacity: 0;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  -webkit-transition: opacity 1s;
  transition: opacity 1s;
}

.border-conic {
  position: absolute;
  inset: 0;
  top: 0px;
  left: 0px;
  top: 50%;
  left: 0;
  height: 100%;
  background: conic-gradient(transparent 50deg, #ff4874 80deg, transparent 100deg);
  filter: blur(8px);
  border-radius: 16px;
  transform-origin: center;
  animation: borderTurn -0.64s linear 4s infinite;
  will-change: transform;
  z-index: 1;
}

.asdf {
  position: relative;
  z-index: 9999;
  display: flex;
  align-items: center;
  background-color: black;
  height: 80%;
  width: 90%;
} */

@keyframes borderTurn {
  0% {
    transform: translateY(-25%) translateX(40%) rotate(0deg);
  }
  30% {
    transform: translateY(0) translateX(0) rotate(90deg) scaleX(0.7);
  }
  50% {
    transform: translateY(-25%) translateX(-40%) rotate(180deg);
  }
  70% {
    transform: translateY(0) translateX(0) rotate(270deg) scaleX(0.7);
  }
  100% {
    transform: translateY(-25%) translateX(40%) rotate(1turn);
  }
}

.glowing-cli {
  --offset: 1px;
  background: #161616;
  border-radius: 50px;
  position: relative;
  height: 48px;
  width: 325px;
  max-width: 100%;
  overflow: hidden;
  border: 1px solid rgba(255, 255, 255, 0.065);
}

/* Conic gradient */
.glowing-cli::before {
  content: '';
  background: conic-gradient(transparent 270deg, white, transparent);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  aspect-ratio: 1;
  width: 100%;
  animation: rotate 2s linear infinite;
}

/* Overlay */
.glowing-cli::after {
  content: '';
  background: inherit;
  border-radius: inherit;
  position: absolute;
  inset: var(--offset);
  height: calc(100% - 2 * var(--offset));
  width: calc(100% - 2 * var(--offset));
}

.glowing-cli p {
  background: transparent;
  position: absolute;
  inset: 0;
  z-index: 10;
  top: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
}

@keyframes rotate {
  from {
    transform: translate(-50%, -50%) scale(1.4) rotate(0turn);
  }

  to {
    transform: translate(-50%, -50%) scale(1.4) rotate(1turn);
  }
}
